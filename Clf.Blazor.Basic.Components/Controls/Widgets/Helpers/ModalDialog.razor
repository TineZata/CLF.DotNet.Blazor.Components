<!-- Extracts from https://stackoverflow.com/questions/59256798/how-to-use-bootstrap-modal-in-blazor-client-app -->
@using Microsoft.AspNetCore.Components.Web
@inherits WidgetBase
@implements IDisposable


@if (IsVisible)
{
	<div class="clf-modal" role="dialog">
		<div class="clf-modal-dialog" role="document">
			<header class="clf-modal-header">
				<span>@Title</span>
			</header>
			<div class="clf-modal-content">
				@if (BodyText != null)
				{
					<p>@BodyText</p>
				}
				@ChildContent
			</div>
			@if (Footer != null)
			{
				<footer>
					@Footer
				</footer>
			}
			else
			{
				<footer>
					<div>
						@if (ModalType == Models.ModalTypes.OneButton)
						{
							<button class="clf-modal-btn" @onclick="@(()=>{})">@Button1Text</button>
						}
						else if (ModalType == Models.ModalTypes.TwoButtons)
						{
							<button class="clf-modal-btn" @onclick="@(()=>{})">@Button1Text</button>
							<button class="clf-modal-btn" @onclick="@(()=>{})">@Button2Text</button>
						}
					</div>
				</footer>
			}
		</div>
	</div>
}

@code {
	[Parameter]
	public RenderFragment? ChildContent { get; set; }

	[Parameter]
	public string Title { get; set; } = "Modal Title";

	[Parameter]
	public string BodyText { get; set; }

	[Parameter]
	public string Button1Text { get; set; } = "OK";

	[Parameter]
	public string Button2Text { get; set; } = "Cancel";

	[Parameter]
	public Models.ModalTypes ModalType { get; set; } = Models.ModalTypes.OneButton;

	[Parameter]
	public RenderFragment? Footer { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

	}

	void IDisposable.Dispose()
	{
	}
}
