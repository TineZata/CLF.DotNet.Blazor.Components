@using Clf.Blazor.Basic.Components.Controls.Helpers
@using Clf.Blazor.Basic.Components.Controls.Models
@using Clf.Blazor.Basic.Components.Controls.Widgets.Helpers
@using Microsoft.AspNetCore.Components.Web
@using Clf.Blazor.Basic.Components.Controls.Widgets.Containers

@inherits PVWidgetBase
@implements IDisposable

@if (IsVisible)
{
	<Alarm BorderStatus="@PVBorderStatus" ContentDisabledTooltip="@(ShowTooltip? TooltipText:string.Empty)" IsContentDisabled="@PVIsDisabled">
		<Tooltip Text="@(ShowTooltip? TooltipText:string.Empty)">
			<label class="check-box-label @Class" disabled="@PVGetDisableStatus()"
				   style="--check-box-width:@GetCheckBoxWidth(); --check-box-height:@GetCheckBoxHeight();">
				<input type="checkbox"
					   disabled="@PVGetDisableStatus()"
					   @bind="@Value"
					   @onclick="OnBooleanWidgetClicked">
				</input>
				@Label
			</label>
		</Tooltip>
	</Alarm>
}

@code
{

	protected override void OnInitialized()
	{
		base.OnInitialized();
		PropertyChanged += OnPropertyChanged;
	}

	private string GetCheckBoxWidth()
	{
		return Width != 0 ? $"{Width}px" : "max-content";
	}

	private string GetCheckBoxHeight()
	{
		return Height != 0 ? $"{Height}px" : "var(--clf-check-box-default-height)";
	}

	void IDisposable.Dispose()
	{
		Convergence.IO.EPICS.CA.Wrapper.Disconnect(PVName);
	}
}