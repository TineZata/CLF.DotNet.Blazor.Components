@page "/OldIndex"
@* @using Clf.Blazor.Basic.Components.Controls.Widgets.Containers
@using Clf.Blazor.Basic.Components.Controls.Widgets.Containers.TabWidget
@using Clf.Blazor.Basic.Components.Controls.Widgets.Monitors
@using Clf.Blazor.Basic.Components.Controls.Widgets.Updates
@using Clf.Blazor.Basic.Components.Controls.Widgets.Helpers *@
@using Clf.Blazor.Basic.Components.Controls.Models
@using System.Threading
@inject IWebHostEnvironment webHostEnv
@using System.IO
@using Convergence
@using System.Collections.ObjectModel
@using Clf.Common.Drawing
@using Clf.Common.ImageProcessing


<br />
<Led />

<BooleanButton />
<SlideButton />
<Checkbox />

<ProcessPVButton />
@* <Graph ></Graph> *@
@* <ImageViewer ></ImageViewer> *@
<ActionButton ></ActionButton>
<Slider />
<ChoiceButton ></ChoiceButton>
@* <ModalDialog /> *@
@* <Tabs OnTabChanged="OnTabChanged">
  <Tab Title="Tab 1" Name="Tab1">
    <Label Text="Label 1" Width="200" Height="100" />
  </Tab>
  <Tab Title="Tab 2" Name="Tab2">
    <h2>Content Tab 2</h2>
    <p>
      This is the content for the Tab 2. It is enabled.
    </p>
  </Tab>
  <Tab Title="Tab 3" Name="Tab3">
    <h2>Content Tab 3</h2>
    <p>
      This is the content for the Tab 3. It is enabled.
    </p>
  </Tab>
  <Tab Title="Tab 4" Enabled="false" Name="Tab4">
    <h2>Content Tab 4</h2>
    <p>
      This is the content for the Tab 4. It is disabled if <i>IsEnabled = false</i>
    </p>
  </Tab>
</Tabs> *@

@* <button @onclick="() => m_ModalDialogVM?.Open()">Open Modal</button> *@
@code {
  

  protected override void OnInitialized()
  {
    base.OnInitialized();


    // "TEST-PM-FE-CAM1:image1:LimitedArrayData"
    // "TEST-PM-FE-CAM1:cam1:SizeY_RBV"
    // "TEST-PM-FE-CAM4:cam1:SizeX_RBV"

    // "Blazor:ActionButtonPV"
    // "Blazor:SliderCheck"
    // "Blazor:ComboBoxCheck"


    // Example 1 Graph
    // "Blazor:GraphCheckX"
    // "Blazor:GraphCheckY"


    Random rand = new Random();
    List<double> xValue = new List<double>();
    List<double> yValue = new List<double>();
    yValue.Clear();
    for (int i = 0; i < 100; i++)
    {
      var temp = rand.Next(0, 99);
      xValue.Add(i % 100);
      yValue.Add(temp);
    }
    // PutValue(xValue.ToArray());
    // PutValue(yValue.ToArray());


    
  }

  // public void OnTabChanged(Tab tab)
  // {

  // }
}

